<?phpnamespace app\admin\controller;use app\common\model\SaidModel;class Said extends Base{    public function index()    {        $said = new SaidModel();        if (request()->isGet()) {            $data = request()->param();            if (!empty($data['page'])) {                if (!empty($data['key'])) {                    $map['id'] = $data['key'];                } else {                    $map = [];                }                $page['pageIndex'] = request()->param('page');                $page['pageSize'] = request()->param('limit');                $list = $said->selectPageByMap($map, $page);                foreach ($list as $k => $v) {                    $v['statusName'] = $v['status_name'];                    $list[$k] = $v;                }                $result['code'] = 0;                $result['msg'] = "";                $result['count'] = $said->selectCountByMap($map);                $result['data'] = $list;                return json($result);            } else {                return $this->fetch();            }        }    }    /**     * @return mixed|\think\response\Json     * 添加我的微语言     */    public function add()    {        $said = new SaidModel();        if (request()->isGet()) {            return $this->fetch();        }        if (request()->isAjax()) {            $data = request()->post();            $data['os'] = get_os();            $data['address'] = get_address_by_ip(request()->ip());            unset($data['file']);            $res = $said->addSaid($data);            if ($res == -1) {                return json(['code' => -1, 'msg' => '程序异常！']);            } else {                if ($res) {                    return json(['code' => 1, 'msg' => '新增我的微语成功']);                } else {                    return json(['code' => -1, 'msg' => '新增我的微语失败']);                }            }        }    }    /**     * 修改我的说说     * @return mixed|\think\response\Json     */    public function edit()    {        $said = new SaidModel();        if (request()->isGet()) {            $said_map['id'] = request()->param('id');            $result = $said->selectInfoByMap($said_map, 1);            $this->assign('said', $result);            return $this->fetch();        }        if (request()->isAjax()) {            $data = request()->post();            $data['os'] = get_os();            $data['address'] = get_address_by_ip(request()->ip());            unset($data['file']);            $res = $said->editSadById($data);            if ($res == -1) {                return json(['code' => -1, 'msg' => '程序异常！']);            } else {                if ($res) {                    return json(['code' => 1, 'msg' => '修改我的微语成功']);                } else {                    return json(['code' => -1, 'msg' => '修改我的微语失败']);                }            }        }    }    /**     * 删除说说     * @return \think\response\Json     */    public function delete()    {        $said = new SaidModel();        if (request()->isAjax()) {            $id = request()->param('id');            $res = $said->deleteSadById($id);            if ($res == -1) {                return json(['code' => -1, 'msg' => '程序异常！']);            } else {                if ($res) {                    return json(['code' => 1, 'msg' => '删除我的微语成功']);                } else {                    return json(['code' => -1, 'msg' => '删除我的微语失败']);                }            }        }    }}